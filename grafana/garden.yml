kind: Module
name: grafana
description: Grafana
type: container
dockerfile: ./Dockerfile
include:
  - Dockerfile
  - config/**/*
---
kind: Module
name: grafana-k8s
type: kubernetes
manifests:
  - apiVersion: networking.istio.io/v1alpha3
    kind: VirtualService
    metadata:
      name: grafana
    spec:
      hosts:
        - "*"
      gateways:
        - gateway
      http:
        - match:
            - uri:
                prefix: /grafana/
          route:
            - destination:
                port:
                  number: 3000
                host: grafana.foodify-default.svc.cluster.local
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      serviceName: grafana
      replicas: 1
      selector:
        matchLabels:
          app: grafana
      template:
        metadata:
          labels:
            app: grafana
        spec:
          securityContext:
            fsGroup: 104
          containers:
            - name: grafana
              image: ${modules.grafana.outputs.deployment-image-name}:${modules.grafana.version}
              env:
                - name: GF_SERVER_DOMAIN
                  value: "${environment.name == 'local' ? providers.local-kubernetes.outputs.default-hostname : providers.kubernetes.outputs.default-hostname}"
                - name: GF_SERVER_ROOT_URL
                  value: "http://${environment.name == 'local' ? providers.local-kubernetes.outputs.default-hostname : providers.kubernetes.outputs.default-hostname}/grafana/"
                - name: GF_SERVER_SERVE_FROM_SUB_PATH
                  value: "true"
              ports:
                - name: http
                  containerPort: 3000
              volumeMounts:
                - name: grafana-volume
                  mountPath: /var/lib/grafana
              livenessProbe:
                httpGet:
                  path: /api/health
                  port: http
                initialDelaySeconds: 5
                periodSeconds: 3
          initContainers:
            - name: grafana-chown
              command: [chown, -R, "472:472", /var/lib/grafana]
              image: busybox:latest
              volumeMounts:
                - name: grafana-volume
                  mountPath: /var/lib/grafana
      volumeClaimTemplates:
        - metadata:
            name: grafana-volume
          spec:
            accessModes: [ "ReadWriteOnce" ]
            storageClassName: "standard"
            resources:
              requests:
                storage: 8Gi
  - apiVersion: v1
    kind: Service
    metadata:
      name: grafana
    spec:
      selector:
        app: grafana
      ports:
        - name: http
          protocol: TCP
          port: 3000
          targetPort: http
