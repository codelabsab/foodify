name: Backend
on:
  push:
    paths-ignore:
      - 'web/**/*'
      - 'terragrunt/**/*'
jobs:
  test_rust:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo test
  lint_rust:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo clippy
  build:
    name: Build containers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Rust Binaries
        run: cargo build --release
      - name: Build Terragrunt Image
        working-directory: ./terragrunt
        run: |
          make build
      - name: Authenticate Google SDK
        working-directory: ./terragrunt
        env:
          GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE }}
        run: |
          echo $GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE > key-file.json
          make authci
      - name: Get Terraform Output
        working-directory: ./terragrunt
        run: |
          make terraform-output
      - name: Print Output
        working-directory: ./terragrunt
        run: |
          cat output.json
      - name: Install GCloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: foodify-281512
          service_account_key: ${{ secrets.GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE }}
      - name: Authenticate Docker
        run: gcloud auth configure-docker
      - name: Configure Kubectl
        run: |
          gcloud container clusters get-credentials $(jq -rs '.[2].gke_cluster_name.value' terragrunt/output.json) --region $(jq -rs '.[2].gke_cluster_location.value' terragrunt/output.json) --project foodify-281512
      - name: Install Garden
        run: |
          curl -sL https://get.garden.io/install.sh | bash
      - name: Create Garden Variable File
        run: |
          export GARDEN_KUBE_CONTEXT="$(kubectl config view -o json | jq -r ".contexts[0].name")"
          echo "
            kube-context=$GARDEN_KUBE_CONTEXT
            repository-url=$(jq -rs '.[0].repository_url.value' terragrunt/output.json)
            project-id=foodify-281512
          " >> garden.dev.env
      - name: Garden Build
        run: |
          $HOME/.garden/bin/garden -e dev --logger-type basic build --yes

