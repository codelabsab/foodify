name: Infrastructure
on:
  workflow_dispatch: {}
  push:
    branches:
      - master
    paths:
      - 'terragrunt/**/*'
      - '.github/workflows/infrastructure.yaml'
env:
  CACHE_IMAGE: eu.gcr.io/foodify-281512/terragrunt
  DOCKER_BUILDKIT: 1
jobs:
  deploy_infra:
    name: Deploy Infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install GCloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: foodify-281512
          service_account_key: ${{ secrets.GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE }}
      - name: Authenticate Docker
        run: gcloud auth configure-docker
      - name: Build Image
        working-directory: ./terragrunt
        run: |
          make buildci
      - name: Push Terragrunt Image
        run: docker push $CACHE_IMAGE:latest
      - name: Authenticate Google SDK
        working-directory: ./terragrunt
        env:
          GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE }}
        run: |
          echo $GCP_TERRAFORM_SERVICE_ACCOUNT_KEY_FILE > key-file.json
          make authci
      - name: Provision Resources
        working-directory: ./terragrunt
        env:
          TERRAGRUNT_AUTO_INIT: "true"
        run: |
          make terraform
      - name: Get Terraform Output
        working-directory: ./terragrunt
        run: |
          make terraform-output
      - name: Upload output
        uses: actions/upload-artifact@v1
        with:
          name: output
          path: terragrunt/output.json
      - name: Configure Kubectl
        run: |
          gcloud container clusters get-credentials $(jq -r '.gke_cluster_name.value' terragrunt/output.json) --region $(jq -r '.gke_cluster_location.value' terragrunt/output.json) --project foodify-281512
      - name: Install CRDs
        run: |
          kubectl apply -f tools/crd/prometheus.yaml
      - name: Install Certmanager
        run: |
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.16.0/cert-manager.yaml
      - name: Invoke Backend Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Backend
          token: ${{ secrets.PERSONAL_TOKEN }}

