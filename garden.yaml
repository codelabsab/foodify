kind: Project
name: foodify
environments:
  - name: local
  - name: dev
defaultEnvironment: local
providers:
  - name: local-kubernetes
    environments: ["local"]
  - name: kubernetes
    context: ${var.cluster_name}
    deploymentRegistry: ${var.repository_url}
    environments: ["dev"]
---
kind: Module
description: Prometheus is used for metrics collection
type: helm
name: prometheus
repo: https://kubernetes-charts.storage.googleapis.com/
chart: prometheus-operator
version: "8.13.12"
values:
  grafana:
    enabled: false
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: true
    additionalServiceMonitors:
      - name: grafana
        endpoints:
          - port: web
            interval: 5s
        selector:
          matchLabels:
            service: grafana
---
kind: Module
description: Loki stores logs for usage in grafana
type: helm
name: loki
repo: https://grafana.github.io/loki/charts
chart: loki-stack
version: "0.37.3"
values:
  promtail:
    enabled: true
    loki:
      serviceName: loki
---
kind: Module
description: Postgresql stores our event log
type: helm
name: postgres
repo: https://charts.bitnami.com/bitnami
chart: postgresql
version: "8.10.14"
values:
  postgresqlDatabase: postgres
  postgresqlUsername: user
  postgresqlPassword: password
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
---
kind: Module
description: Elastic Search stores our views
type: helm
name: elasticsearch
repo: https://charts.bitnami.com/bitnami
chart: elasticsearch
version: "12.5.1"
---
kind: Module
description: Kafka passes messages
type: helm
name: kafka
repo: https://charts.bitnami.com/bitnami
chart: kafka
version: "11.3.2"
---
kind: Module
name: recipe-command
type: container
dockerfile: Dockerfile
build:
  targetImage: recipe_command
services:
  - name: recipe-command
    dependencies:
      - postgres
    env:
      POSTGRES_URI: "postgres://user:password@postgres-postgresql:5432/postgres"
      KAFKA_URI: "kafka:9092"
    ports:
      - name: grpc
        containerPort: 4071
      - name: http
        containerPort: 9000
    healthCheck:
      httpGet:
        port: http
        path: /health
---
kind: Module
name: recipe-query
type: container
dockerfile: Dockerfile
build:
  targetImage: recipe_query
services:
  - name: recipe-query
    dependencies:
      - postgres
    env:
      POSTGRES_URI: "postgres://user:password@postgres-postgresql:5432/postgres"
      KAFKA_URI: "kafka:9092"
      ELASTIC_SEARCH_URI: "http://elasticsearch-elasticsearch-master:9200"
    ports:
      - name: http
        containerPort: 9000
    healthCheck:
      httpGet:
        port: http
        path: /health
---
kind: Module
name: api
type: container
dockerfile: Dockerfile
build:
  targetImage: api
services:
  - name: api
    ingresses:
      - path: /api
        port: http
    env:
      ELASTIC_SEARCH_URI: "http://elasticsearch-elasticsearch-master:9200"
    dependencies:
      - recipe-command
    ports:
      - name: http
        containerPort: 9000
    healthCheck:
      httpGet:
        port: http
        path: /api
